name: request reviews

on:
  pull_request:
    types:
      - review_requested

jobs:
  echo_reviewers:
    name: echo_reviewers
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/graphql-action@v2.x
        id: get_latest_release
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                releases(first:1) {
                  nodes {
                    name
                    createdAt
                    tagName
                    description
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo '${{ steps.get_latest_release.outputs.data }}'"
      - uses: octokit/graphql-action@v2.x
        id: get_reviewers
        with:
          # query: |
          #   query release($owner:String!,$repo:String!) {
          #     repository(owner:$owner,name:$repo) {
          #       releases(first:1) {
          #         nodes {
          #           name
          #           createdAt
          #           tagName
          #           description
          #         }
          #       }
          #     }
          #   }
          # query: |
          #   query reviewers($owner: String!, $repo: String!, $number: Int!) {
          #     repository(owner: $repoOwner, name: $repoName) {
          #       pullRequest(number: $number) {
          #         id
          #         author {
          #           login
          #         }
          #         reviewRequests(last: 100) {
          #           nodes {
          #             requestedReviewer {
          #               ... on User {
          #                 id
          #                 login
          #               }
          #               ... on Team {
          #                 id
          #                 name
          #                 members(last: 100) {
          #                   nodes {
          #                     id
          #                     login
          #                   }
          #                 }
          #               }
          #             }
          #           }
          #         }
          #       }
          #     }
          # query: |
          #   query release($owner:String!,$repo:String!) {
          #     repository(owner:$owner,name:$repo) {
          #       releases(first:1) {
          #         nodes {
          #           name
          #           createdAt
          #           tagName
          #           description
          #         }
          #       }
          #     }
          #   }
          query: |
            query reviewers($owner: String!, $repo: String!, $number: Int!) {
              repository(owner: $owner, name: $repo) {
                pullRequest(number: $number) {
                  id
                  author {
                    login
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          number: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo '${{ steps.get_reviewers.outputs.data }}'"
